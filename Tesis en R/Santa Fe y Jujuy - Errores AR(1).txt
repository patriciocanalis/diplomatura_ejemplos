#Limpiar memoria y cargar base

rm (list=ls())
setwd("C:/Users/equipo/Desktop/Tesis")
data<-read.csv("data.csv",header=TRUE)


#Invocar paquetes

library("systemfit")
library("portes")
library("MVN")


#PASO 1

#Estimar modelos con variables instrumentales

santafe<-dr_s~-1+t+dr_s_1+pe_s+pg_s+y+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq
jujuy<-dr_j~-1+t+dr_j_1+pe_j+pg_j+y+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq

inst_s <-~t+pe_s+pg_s+y+te_1+tesq_1+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq
fit2sls_s<-systemfit(santafe,"2SLS",inst=inst_s,data=data)
u_circ_s<-residuals(fit2sls_s)

inst_j <-~t+pe_j+pg_j+y+te_1+tesq_1+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq
fit2sls_j<-systemfit(jujuy,"2SLS",inst=inst_j,data=data)
u_circ_j<-residuals(fit2sls_j)


#Obtener estimación de la matriz de varianzas y covarianzas con errores AR(1)

U_circ<-cbind(u_circ_s,u_circ_j)
cnames<-c("u_circ_s","u_circ_j")
colnames(U_circ)<-cnames

U_circ_1<-U_circ[1:73,]
U_circ<-U_circ[2:74,]
U_circ<-as.matrix(U_circ)
U_circ_1<-as.matrix(U_circ_1)

R_circ<-solve((t(U_circ_1))%*%U_circ_1)%*%(t(U_circ_1))%*%U_circ

E_circ<-U_circ-U_circ_1%*%R_circ

SIGMA_circ<-((t(E_circ))%*%(E_circ))/73


#PASO 2

#Aplicar mínimos cuadrados generalizados factibles con la matriz estimada

Z_s<-cbind(data[,"t"],data[,"dr_s_1"],data[,"pe_s"],data[,"pg_s"],data[,"y"],data[,"ene"],data[,"feb"],data[,"mar"],data[,"abr"],data[,"may"],data[,"jun"],data[,"jul"],data[,"ago"],data[,"sep"],data[,"oct"],data[,"nov"],data[,"te"],data[,"tesq"])
cnames_s<-c("t","dr_s_1","pe_s","pg_s","y","ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","te","tesq")
colnames(Z_s)<-cnames_s
Z_s_1<-Z_s[1:73,]
Z_s<-Z_s[2:74,]

Z_j<-cbind(data[,"t"],data[,"dr_j_1"],data[,"pe_j"],data[,"pg_j"],data[,"y"],data[,"ene"],data[,"feb"],data[,"mar"],data[,"abr"],data[,"may"],data[,"jun"],data[,"jul"],data[,"ago"],data[,"sep"],data[,"oct"],data[,"nov"],data[,"te"],data[,"tesq"])
cnames_j<-c("t","dr_j_1","pe_j","pg_d","y","ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","te","tesq")
colnames(Z_j)<-cnames_j
Z_j_1<-Z_j[1:73,]
Z_j<-Z_j[2:74,]

ceros_s<-matrix(0, 73, 18)
ceros_j<-matrix(0, 73, 18)

Z_s_0<-rbind(Z_s,ceros_s)
Z_j_0<-rbind(ceros_j,Z_j)

Z_s_1_0<-rbind(Z_s_1,ceros_s)
Z_j_1_0<-rbind(ceros_j,Z_j_1)

Z<-cbind(Z_s_0,Z_j_0)
Z_1<-cbind(Z_s_1_0,Z_j_1_0)
I_T<-diag(1,73)
I_M<-diag(1,2)

H<-cbind((Z-((t(R_circ))%x%I_T)%*%Z_1),(I_M%x%U_circ_1))

Y_s<-data[,"dr_s"]
Y_s_1<-Y_s[1:73]
Y_s<-Y_s[2:74]

Y_j<-data[,"dr_j"]
Y_j_1<-Y_j[1:73]
Y_j<-Y_j[2:74]

Y<-matrix(c(Y_s,Y_j),146,1)
Y_1<-matrix(c(Y_s_1,Y_j_1),146,1)

tita_sombrero_asterisco<-solve((t(H))%*%((solve(SIGMA_circ))%x%I_T)%*%H)%*%(t(H))%*%((solve(SIGMA_circ))%x%I_T)%*%(Y-(t(R_circ)%x%I_T)%*%Y_1)

r1<-R_circ[,1]
r2<-R_circ[,2]

r_circ<-matrix(c(r1,r2),4,1)
cerovector<-matrix(0,36,1)

vector<-matrix(c(cerovector,r_circ),40,1)

tita_sombrero<-tita_sombrero_asterisco+vector


#Iterar el proceso

R_circ_iter<-matrix(c(tita_sombrero[37:38,1],tita_sombrero[39:40,1]),2,2)
E_circ<-U_circ-U_circ_1%*%R_circ_iter
SIGMA_circ_iter<-((t(E_circ))%*%(E_circ))/73
H_iter<-cbind((Z-((t(R_circ_iter))%x%I_T)%*%Z_1),(I_M%x%U_circ_1))
tita_sombrero_asterisco_iter<-solve((t(H_iter))%*%((solve(SIGMA_circ_iter))%x%I_T)%*%H_iter)%*%(t(H_iter))%*%((solve(SIGMA_circ_iter))%x%I_T)%*%(Y-(t(R_circ_iter)%x%I_T)%*%Y_1)
r1_iter<-R_circ_iter[,1]
r2_iter<-R_circ_iter[,2]
r_circ_iter<-matrix(c(r1,r2),4,1)
cerovector_iter<-matrix(0,36,1)
vector_iter<-matrix(c(cerovector_iter,r_circ_iter),40,1)
tita_sombrero_iter0<-tita_sombrero_asterisco_iter+vector_iter

dif=1
nroiter=1
while (dif>0.000001)
{
R_circ_iter<-matrix(c(tita_sombrero_iter0[37:38,1],tita_sombrero_iter0[39:40,1]),2,2)
E_circ<-U_circ-U_circ_1%*%R_circ_iter
SIGMA_circ_iter<-((t(E_circ))%*%(E_circ))/73
H_iter<-cbind((Z-((t(R_circ_iter))%x%I_T)%*%Z_1),(I_M%x%U_circ_1))
tita_sombrero_asterisco_iter<-solve((t(H_iter))%*%((solve(SIGMA_circ_iter))%x%I_T)%*%H_iter)%*%(t(H_iter))%*%((solve(SIGMA_circ_iter))%x%I_T)%*%(Y-(t(R_circ_iter)%x%I_T)%*%Y_1)
r1_iter<-R_circ_iter[,1]
r2_iter<-R_circ_iter[,2]
r_circ_iter<-matrix(c(r1,r2),4,1)
cerovector_iter<-matrix(0,36,1)
vector_iter<-matrix(c(cerovector_iter,r_circ_iter),40,1)
tita_sombrero_iter1<-tita_sombrero_asterisco_iter+vector_iter
dif<-min(abs(tita_sombrero_iter1[1:36]-tita_sombrero_iter0[1:36]))
tita_sombrero_iter0<-tita_sombrero_iter1
nroiter<-cbind(nroiter,1)
nroiter<-sum(nroiter)
}

nroiter

tita_sombrero_iter<-tita_sombrero_iter0


#Elaborar Tabla con coeficientes estimados

S<-solve((t(H_iter))%*%((solve(SIGMA_circ_iter))%x%I_T)%*%H_iter)

v1<-c(S[1,1],S[2,2],S[3,3],S[4,4],S[5,5],S[6,6],S[7,7],S[8,8],S[9,9],S[10,10],S[11,11],S[12,12],S[13,13],S[14,14],S[15,15],S[16,16],S[17,17],S[18,18],S[19,19],S[20,20],S[21,21],S[22,22],S[23,23],S[24,24],S[25,25],S[26,26],S[27,27],S[28,28],S[29,29],S[30,30],S[31,31],S[32,32],S[33,33],S[34,34],S[35,35],S[36,36])
v3<-matrix(0,4,1)
VV<-matrix(c(v1,v3),40,1)
SS<-sqrt(VV)
t<-tita_sombrero_iter/SS

Tabla<-matrix(c(round(tita_sombrero_iter,4),round(SS,4),round(t,4)),40,3)

rnames<-c(cnames_s,cnames_j,v3)
rownames(Tabla)<-rnames
cnames<-c("Estimate","Std. Error","t value")
colnames(Tabla)<-cnames

Tabla

write.csv(Tabla,"salida_s_j_ar1.csv")


#Obtener residuos

y_aj_s<-Z_s%*%tita_sombrero_iter[1:18]
y_aj_j<-Z_j%*%tita_sombrero_iter[19:36]

Error_s<-Y_s-y_aj_s
Error_j<-Y_j-y_aj_j

Residuos<-matrix(c(Error_s,Error_j),73,2)

write.csv(Residuos,"residuos_s_j_ar1.csv")


#Pruebas a las ecuaciones estimadas por variables instrumentales

#Heterocedasticidad: Test de Breusch-Pagan

vble_endog_s<-lm(dr_s_1~t+pe_s+pg_s+y+te_1+tesq_1+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq,data=data)
vble_endog_s_estimada<-fitted.values(vble_endog_s)
data_s<-cbind(data[,"dr_s"],data[,"t"],vble_endog_s_estimada,data[,"pe_s"],data[,"pg_s"],data[,"y"],data[,"ene"],data[,"feb"],data[,"mar"],data[,"abr"],data[,"may"],data[,"jun"],data[,"jul"],data[,"ago"],data[,"sep"],data[,"oct"],data[,"nov"],data[,"te"],data[,"tesq"])
cnames1_s<-c("dr_s","t","vble_endog_s_estimada","pe_s","pg_s","y","ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","te","tesq")
colnames(data_s)<-cnames1_s
data_s<-as.data.frame(data_s)
bp_s<-bptest(dr_s~-1+t+vble_endog_s_estimada+pe_s+pg_s+y+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq,data=data_s)
bp_s$p.value

vble_endog_j<-lm(dr_j_1~t+pe_j+pg_j+y+te_1+tesq_1+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq,data=data)
vble_endog_j_estimada<-fitted.values(vble_endog_j)
data_j<-cbind(data[,"dr_j"],data[,"t"],vble_endog_j_estimada,data[,"pe_j"],data[,"pg_j"],data[,"y"],data[,"ene"],data[,"feb"],data[,"mar"],data[,"abr"],data[,"may"],data[,"jun"],data[,"jul"],data[,"ago"],data[,"sep"],data[,"oct"],data[,"nov"],data[,"te"],data[,"tesq"])
cnames1_j<-c("dr_j","t","vble_endog_j_estimada","pe_j","pg_j","y","ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","te","tesq")
colnames(data_j)<-cnames1_j
data_j<-as.data.frame(data_j)
bp_s<-bptest(dr_j~-1+t+vble_endog_j_estimada+pe_j+pg_j+y+ene+feb+mar+abr+may+jun+jul+ago+sep+oct+nov+te+tesq,data=data_j)
bp_s$p.value

#Autocorrelación: Test de Ljung-Box

LB<- function(n) {
LB1<-Box.test(n, lag = 1, type = "Ljung-Box", fitdf = 0)
LB2<-Box.test(n, lag = 2, type = "Ljung-Box", fitdf = 0)
LB3<-Box.test(n, lag = 3, type = "Ljung-Box", fitdf = 0)
LB4<-Box.test(n, lag = 4, type = "Ljung-Box", fitdf = 0)
LB5<-Box.test(n, lag = 5, type = "Ljung-Box", fitdf = 0)
LB6<-Box.test(n, lag = 6, type = "Ljung-Box", fitdf = 0)
LB7<-Box.test(n, lag = 7, type = "Ljung-Box", fitdf = 0)
LB8<-Box.test(n, lag = 8, type = "Ljung-Box", fitdf = 0)
LB9<-Box.test(n, lag = 9, type = "Ljung-Box", fitdf = 0)
LB10<-Box.test(n, lag = 10, type = "Ljung-Box", fitdf = 0)
LB11<-Box.test(n, lag = 11, type = "Ljung-Box", fitdf = 0)
LB12<-Box.test(n, lag = 12, type = "Ljung-Box", fitdf = 0)   
LB<-c(LB1$p.value,LB2$p.value,LB3$p.value,LB4$p.value,LB5$p.value,LB6$p.value,LB7$p.value,LB8$p.value,LB9$p.value,LB10$p.value,LB11$p.value,LB12$p.value)
LB<-matrix(LB,12,1)
LB_names<-c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(LB)<-LB_names
return(LB)
}

LB(u_circ_s)

LB(u_circ_j)

#Normalidad: Test de Shapiro-Wilk

shapiro.test(u_circ_s[,1])$p.value

shapiro.test(u_circ_j[,1])$p.value


#Obtener correlación entre residuos tras estimación por variables instrumentales

(correlacion<-round(cor(U_circ), 4))


#Pruebas al sistema

#Autocorrelación: Varios tests

LjungBox(Residuos,lags=seq(1,12,1),order=0,season=1,squared.residuals=FALSE)
Hosking(Residuos, lags=seq(1,12,1), order=0, season=1, squared.residuals=FALSE)
LiMcLeod(Residuos, lags=seq(1,12,1), order=0, season=1, squared.residuals=FALSE)
MahdiMcLeod(Residuos, lags=seq(1,12,1), order=0, season=1, squared.residuals=FALSE)

#Normalidad multivariada

mvn(Residuos)
result <- mvn(data = Residuos, univariatePlot = "histogram")
